{"version":3,"sources":["utils/selectOptions.js","components/Forms/Select/Select.js","components/Registers/Registers.js","components/Forms/Input/Input.js","components/Commands/Commands.js","utils/parametersSet.js","App.js","index.js"],"names":["commandOptions","id","name","paramsOptions","Select","label","value","onChange","options","className","e","currentTarget","map","item","key","xmlns","viewBox","d","Registers","onSubmit","useState","command","setCommand","firstParam","setFirstParam","secondParam","setSecondParam","disabled","type","cx","Input","target","Commands","ax","bx","dx","setAx","setBx","setCx","setDx","mappedOptions","AX","BX","CX","DX","addSubParameters","form","setters","getters","isSubtraction","get","setterName","pickedSetter","registerFirstParamValue","Number","toLowerCase","registerSecondParamValue","operation","App","preventDefault","alert","data","FormData","pickedSecondParam","moveParameters","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.855c4ebb.chunk.js","sourcesContent":["const commandOptions = [\n  { id: 1, name: 'MOV' },\n  { id: 2, name: 'ADD' },\n  { id: 3, name: 'SUB' },\n];\n\nconst paramsOptions = [\n  { id: 1, name: 'AX' },\n  { id: 2, name: 'BX' },\n  { id: 3, name: 'CX' },\n  { id: 4, name: 'DX' },\n];\n\nexport { commandOptions, paramsOptions };\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Select = ({ name, label, value, onChange, options }) => {\n  return (\n    <div className=\"w-full md:w-full mb-6 md:mb-0\">\n      <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n        {label}\n      </label>\n      <div className=\"relative\">\n        <select \n          name={name}\n          value={value}\n          onChange={(e) => onChange(e.currentTarget.value)}\n          className=\"block mb-3 appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n        >\n          {options.map((item) => (\n            <option key={item.id} value={item.name}>{item.name}</option>\n          ))}\n        </select>\n        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n          <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n}\n\nexport default Select\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport cx from 'classnames';\n\nimport { commandOptions, paramsOptions } from '../../utils/selectOptions';\nimport Select from '../Forms/Select';\n\n\nconst Registers = ({ onSubmit }) => {\n  const [command, setCommand] = useState('MOV');\n  const [firstParam, setFirstParam] = useState('CX');\n  const [secondParam, setSecondParam] = useState('BX');\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h3 className=\"my-5\">Commands</h3>\n      <Select\n        value={command} \n        label=\"Command\"\n        name=\"command\"\n        onChange={setCommand}\n        options={commandOptions}\n      />\n      <Select\n        value={firstParam} \n        label=\"Parameter 1\"\n        name=\"param1\"\n        onChange={setFirstParam}\n        options={paramsOptions}\n      />\n      <Select\n        value={secondParam} \n        label=\"Parameter 2\"\n        name=\"param2\"\n        onChange={setSecondParam}\n        options={paramsOptions}\n      />\n      <button \n        disabled={firstParam === secondParam}\n        type=\"submit\"\n        className={cx(\"bg-transparent mt-6 w-full text-blue-700 font-semibold py-3 px-4 border border-blue-500 rounded\", {\n          \"cursor-not-allowed opacity-50\": firstParam === secondParam,\n        })}\n      >\n        Wykonaj\n      </button>\n    </form>\n  )\n};\n\nRegisters.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Registers\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Input = ({ label, value, onChange }) => {\n  return (\n    <div className=\"w-full md:w-full mb-6 md:mb-0\">\n      <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n        {label}\n      </label>\n      <input\n        value={value} \n        onChange={(e) => onChange(e.target.value)}\n        className=\"appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\" \n        type=\"text\"\n      />\n    </div>\n  )\n}\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Input from '../Forms/Input';\n\nconst Commands = ({\n  ax,\n  bx,\n  cx,\n  dx,\n  setAx, \n  setBx,\n  setCx,\n  setDx,\n}) => {\n\n  return (\n    <>\n      <h3 className=\"my-5\">Registers</h3>\n      <Input \n        label=\"AX\"\n        value={ax}\n        onChange={setAx}\n      />\n      <Input \n        label=\"BX\"\n        value={bx}\n        onChange={setBx}\n      />\n      <Input \n        label=\"CX\"\n        value={cx}\n        onChange={setCx}\n      />\n      <Input \n        label=\"DX\"\n        value={dx}\n        onChange={setDx}\n      />\n    </>\n  )\n}\n\nCommands.propTypes = {\n  ax: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  bx: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  cx: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  dx: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  setAx: PropTypes.func.isRequired,\n  setBx: PropTypes.func.isRequired,\n  setCx: PropTypes.func.isRequired,\n  setDx: PropTypes.func.isRequired,\n}\n\nexport default Commands\n","const mappedOptions = {\n  AX: 'setAx',\n  BX: 'setBx',\n  CX: 'setCx',\n  DX: 'setDx',\n};\n  \nconst moveParameters = (form, setters, getters) => {\n  const firstParam = form.get('param1');\n  const secondParam = form.get('param2');\n\n  const pickedFirstParam = mappedOptions[firstParam];\n  const pickedSecondParam = mappedOptions[secondParam];\n  \n  setters[pickedFirstParam](getters[secondParam.toLowerCase()]);\n  setters[pickedSecondParam]('');\n};\n\nconst addSubParameters = (form, setters, getters, isSubtraction = false) => {\n  const firstParam = form.get('param1');\n  const secondParam = form.get('param2');\n\n  const setterName = mappedOptions[firstParam];\n  const pickedSetter = setters[setterName];\n  \n  const registerFirstParamValue = Number(getters[firstParam.toLowerCase()]);\n  const registerSecondParamValue = Number(getters[secondParam.toLowerCase()]); \n\n  const operation = !isSubtraction \n    ? registerFirstParamValue + registerSecondParamValue\n    : registerFirstParamValue - registerSecondParamValue;\n\n  pickedSetter(operation);\n};\n\n// const moveParameters = (form, setters, getters) => {\n//   const mappedOptions = {\n//     AX: 'setAx',\n//     BX: 'setBx',\n//     CX: 'setCx',\n//     DX: 'setDx',\n//   };\n  \n//   const firstParam = form.get('param1');\n//   const secondParam = form.get('param2');\n  \n//   // wartość z pola 1 jest przepisywana do pola 2\n//   // wartość z pola 1 wtedy znika\n\n//   const pickedFirstParam = mappedOptions[firstParam];\n//   const pickedSecondParam = mappedOptions[secondParam];\n  \n//   setters[pickedFirstParam](getters[secondParam.toLowerCase()]);\n//   setters[pickedSecondParam](getters[firstParam.toLowerCase()]);\n// };\n\nexport { moveParameters, addSubParameters };\n","import React, { useState } from 'react'\n\nimport Registers from './components/Registers';\nimport Commands from './components/Commands';\n\nimport {\n  moveParameters,\n  addSubParameters,\n} from './utils/parametersSet';\n\nconst App = () => {\n  const [ax, setAx] = useState('');\n  const [bx, setBx] = useState('');\n  const [cx, setCx] = useState('');\n  const [dx, setDx] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    \n    if (ax === '' || bx === '' || cx === '' || dx === '') {\n      return alert('Complete all text fields in the register');\n    }\n\n    const data = new FormData(e.target);\n    const setters = { setAx, setBx, setCx, setDx };\n    const getters = { ax, bx, cx, dx};\n\n    switch (data.get('command')) {\n      case 'MOV':\n         return moveParameters(data, setters, getters);      \n    \n      case 'ADD': \n        return addSubParameters(data, setters, getters);\n      \n      case 'SUB': \n        return addSubParameters(data, setters, getters, true);\n      \n      default:\n        break;\n    }\n  };\n \n  return (\n    <div className=\"container mx-auto px-4\">\n      <div className=\"flex mb-4\">\n        <div className=\"w-1/2 mx-2\">\n          <Commands\n            ax={ax}\n            bx={bx}\n            cx={cx}\n            dx={dx}\n            setAx={setAx}\n            setBx={setBx}\n            setCx={setCx}\n            setDx={setDx}\n          />\n        </div>\n        <div className=\"w-1/2 mx-2\">\n          <Registers \n            onSubmit={onSubmit} \n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/tailwind.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}