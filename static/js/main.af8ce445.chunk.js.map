{"version":3,"sources":["utils/selectOptions.js","components/Forms/Select/Select.js","components/Registers/Registers.js","components/Forms/Input/Input.js","components/Commands/Commands.js","utils/parametersSet.js","App.js","index.js"],"names":["commandOptions","id","name","paramsOptions","Select","label","value","onChange","options","className","e","currentTarget","map","item","key","xmlns","viewBox","d","Registers","onSubmit","useState","command","setCommand","firstParam","setFirstParam","secondParam","setSecondParam","disabled","type","cx","Input","target","Commands","chartOfRegisters","mappedOptions","AX","BX","CX","DX","addSubParameters","form","setters","getters","isSubtraction","get","setterName","pickedSetter","registerFirstParamValue","Number","toLowerCase","registerSecondParamValue","operation","App","ax","setAx","bx","setBx","setCx","dx","setDx","preventDefault","registers","some","alert","test","data","FormData","moveParameters","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAMA,EAAiB,CACrB,CAAEC,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,QAGXC,EAAgB,CACpB,CAAEF,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,OCwBFE,EA/BA,SAAC,GAA+C,IAA7CF,EAA4C,EAA5CA,KAAMG,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC9C,OACE,yBAAKC,UAAU,iCACb,2BAAOA,UAAU,sEACdJ,GAEH,yBAAKI,UAAU,YACb,4BACEP,KAAMA,EACNI,MAAOA,EACPC,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAEC,cAAcL,QAC1CG,UAAU,mLAETD,EAAQI,KAAI,SAACC,GAAD,OAAU,4BAAQC,IAAKD,EAAKZ,GAAIK,MAAOO,EAAKX,MAAOW,EAAKX,UAEvE,yBAAKO,UAAU,uFACb,yBAAKA,UAAU,uBAAuBM,MAAM,6BAA6BC,QAAQ,aAAY,0BAAMC,EAAE,oFCmChGC,EA9CG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACJC,mBAAS,OADL,mBAC3BC,EAD2B,KAClBC,EADkB,OAEEF,mBAAS,MAFX,mBAE3BG,EAF2B,KAEfC,EAFe,OAGIJ,mBAAS,MAHb,mBAG3BK,EAH2B,KAGdC,EAHc,KAKlC,OACE,0BAAMP,SAAUA,GACd,wBAAIV,UAAU,QAAd,YACA,kBAAC,EAAD,CACEH,MAAOe,EACPhB,MAAM,UACNH,KAAK,UACLK,SAAUe,EACVd,QAASR,IAEX,kBAAC,EAAD,CACEM,MAAOiB,EACPlB,MAAM,cACNH,KAAK,SACLK,SAAUiB,EACVhB,QAASL,IAEX,kBAAC,EAAD,CACEG,MAAOmB,EACPpB,MAAM,cACNH,KAAK,SACLK,SAAUmB,EACVlB,QAASL,IAEX,4BACEwB,SAAUJ,IAAeE,EACzBG,KAAK,SACLnB,UAAWoB,IAAG,kGAAmG,CAC/G,gCAAiCN,IAAeE,KAJpD,YCZSK,EAtBD,SAAC,GAAgC,IAA9BzB,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACE,yBAAKE,UAAU,iCACb,2BAAOA,UAAU,sEACdJ,GAEH,2BACEC,MAAOA,EACPC,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAEqB,OAAOzB,QACnCG,UAAU,uIACVmB,KAAK,WCgBEI,EAxBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACf,oCACE,wBAAIxB,UAAU,QAAd,aACCwB,EAAiBrB,KAAI,gBAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,SAAjB,OACpB,kBAAC,EAAD,CACEO,IAAKT,EACLA,MAAOA,EACPC,MAAOA,EACPC,SAAUA,SCbZ2B,EAAgB,CACpBC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,SAYAC,EAAmB,SAACC,EAAMC,EAASC,GAAoC,IAA3BC,EAA0B,wDACpEpB,EAAaiB,EAAKI,IAAI,UACtBnB,EAAce,EAAKI,IAAI,UAEvBC,EAAaX,EAAcX,GAC3BuB,EAAeL,EAAQI,GAEvBE,EAA0BC,OAAON,EAAQnB,EAAW0B,gBACpDC,EAA2BF,OAAON,EAAQjB,EAAYwB,gBAEtDE,EAAaR,EAEfI,EAA0BG,EAD1BH,EAA0BG,EAG9BJ,EAAaK,ICuCAC,EA3DH,WAAO,IAAD,EACIhC,mBAAS,IADb,mBACTiC,EADS,KACLC,EADK,OAEIlC,mBAAS,IAFb,mBAETmC,EAFS,KAELC,EAFK,OAGIpC,mBAAS,IAHb,mBAGTS,EAHS,KAGL4B,EAHK,OAIIrC,mBAAS,IAJb,mBAITsC,EAJS,KAILC,EAJK,KAsCV1B,EAAmB,CACvB,CAAE5B,MAAO,KAAMC,MAAO+C,EAAI9C,SAAU+C,GACpC,CAAEjD,MAAO,KAAMC,MAAOiD,EAAIhD,SAAUiD,GACpC,CAAEnD,MAAO,KAAMC,MAAOuB,EAAItB,SAAUkD,GACpC,CAAEpD,MAAO,KAAMC,MAAOoD,EAAInD,SAAUoD,IAGtC,OACE,yBAAKlD,UAAU,0BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAUwB,iBAAkBA,KAE9B,yBAAKxB,UAAU,cACb,kBAAC,EAAD,CAAWU,SA9CF,SAACT,GAChBA,EAAEkD,iBAEF,IAAMC,EAAY,CAACR,EAAIE,EAAI1B,EAAI6B,GAE/B,GAAIG,EAAUC,MAAK,SAACjD,GAAD,MAAmB,KAATA,KAC3B,OAAOkD,MAAM,4CAGf,GAAIF,EAAUC,MAAK,SAACjD,GAAD,OAAW,YAAYmD,KAAKnD,MAC7C,OAAOkD,MAAM,2CAGf,IAAME,EAAO,IAAIC,SAASxD,EAAEqB,QACtBU,EAAU,CAAEa,QAAOE,QAAOC,QAAOE,SACjCjB,EAAU,CAAEW,KAAIE,KAAI1B,KAAI6B,MAE9B,OAAQO,EAAKrB,IAAI,YACf,IAAK,MACF,OD5Bc,SAACJ,EAAMC,EAASC,GACrC,IAAMnB,EAAaiB,EAAKI,IAAI,UACtBnB,EAAce,EAAKI,IAAI,UAI7BH,EAFyBP,EAAcX,IAEbmB,EAAQjB,EAAYwB,gBCsBhCkB,CAAeF,EAAMxB,EAASC,GAExC,IAAK,MACH,OAAOH,EAAiB0B,EAAMxB,EAASC,GAEzC,IAAK,MACH,OAAOH,EAAiB0B,EAAMxB,EAASC,GAAS,W,MCpCxD0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.af8ce445.chunk.js","sourcesContent":["const commandOptions = [\n  { id: 1, name: 'MOV' },\n  { id: 2, name: 'ADD' },\n  { id: 3, name: 'SUB' },\n];\n\nconst paramsOptions = [\n  { id: 1, name: 'AX' },\n  { id: 2, name: 'BX' },\n  { id: 3, name: 'CX' },\n  { id: 4, name: 'DX' },\n];\n\nexport { commandOptions, paramsOptions };\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Select = ({ name, label, value, onChange, options }) => {\n  return (\n    <div className=\"w-full md:w-full mb-6 md:mb-0\">\n      <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n        {label}\n      </label>\n      <div className=\"relative\">\n        <select\n          name={name}\n          value={value}\n          onChange={(e) => onChange(e.currentTarget.value)}\n          className=\"block mb-3 appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n        >\n          {options.map((item) => <option key={item.id} value={item.name}>{item.name}</option>)}\n        </select>\n        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n          <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n}\n\nexport default Select\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport cx from 'classnames';\n\nimport { commandOptions, paramsOptions } from '../../utils/selectOptions';\nimport Select from '../Forms/Select';\n\n\nconst Registers = ({ onSubmit }) => {\n  const [command, setCommand] = useState('MOV');\n  const [firstParam, setFirstParam] = useState('CX');\n  const [secondParam, setSecondParam] = useState('BX');\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h3 className=\"my-5\">Commands</h3>\n      <Select\n        value={command}\n        label=\"Command\"\n        name=\"command\"\n        onChange={setCommand}\n        options={commandOptions}\n      />\n      <Select\n        value={firstParam}\n        label=\"Parameter 1\"\n        name=\"param1\"\n        onChange={setFirstParam}\n        options={paramsOptions}\n      />\n      <Select\n        value={secondParam}\n        label=\"Parameter 2\"\n        name=\"param2\"\n        onChange={setSecondParam}\n        options={paramsOptions}\n      />\n      <button\n        disabled={firstParam === secondParam}\n        type=\"submit\"\n        className={cx(\"bg-transparent mt-6 w-full text-blue-700 font-semibold py-3 px-4 border border-blue-500 rounded\", {\n          \"cursor-not-allowed opacity-50\": firstParam === secondParam,\n        })}\n      >\n        Submit\n      </button>\n    </form>\n  )\n};\n\nRegisters.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Registers\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Input = ({ label, value, onChange }) => {\n  return (\n    <div className=\"w-full md:w-full mb-6 md:mb-0\">\n      <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n        {label}\n      </label>\n      <input\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        className=\"appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n        type=\"text\"\n      />\n    </div>\n  )\n}\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Input from '../Forms/Input';\n\nconst Commands = ({ chartOfRegisters }) => (\n  <>\n    <h3 className=\"my-5\">Registers</h3>\n    {chartOfRegisters.map(({ label, value, onChange}) => (\n      <Input\n        key={label}\n        label={label}\n        value={value}\n        onChange={onChange}\n      />\n    ))}\n  </>\n);\n\nCommands.propTypes = {\n  chartOfRegisters: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      onChange: PropTypes.func,\n    })\n  ),\n}\n\nexport default Commands\n","const mappedOptions = {\n  AX: 'setAx',\n  BX: 'setBx',\n  CX: 'setCx',\n  DX: 'setDx',\n};\n\nconst moveParameters = (form, setters, getters) => {\n  const firstParam = form.get('param1');\n  const secondParam = form.get('param2');\n\n  const pickedFirstParam = mappedOptions[firstParam];\n\n  setters[pickedFirstParam](getters[secondParam.toLowerCase()]);\n};\n\nconst addSubParameters = (form, setters, getters, isSubtraction = false) => {\n  const firstParam = form.get('param1');\n  const secondParam = form.get('param2');\n\n  const setterName = mappedOptions[firstParam];\n  const pickedSetter = setters[setterName];\n\n  const registerFirstParamValue = Number(getters[firstParam.toLowerCase()]);\n  const registerSecondParamValue = Number(getters[secondParam.toLowerCase()]);\n\n  const operation = !isSubtraction\n    ? registerFirstParamValue + registerSecondParamValue\n    : registerFirstParamValue - registerSecondParamValue;\n\n  pickedSetter(operation);\n};\n\nexport { moveParameters, addSubParameters };\n","import React, { useState } from 'react'\n\nimport Registers from './components/Registers';\nimport Commands from './components/Commands';\n\nimport {\n  moveParameters,\n  addSubParameters,\n} from './utils/parametersSet';\n\nconst App = () => {\n  const [ax, setAx] = useState('');\n  const [bx, setBx] = useState('');\n  const [cx, setCx] = useState('');\n  const [dx, setDx] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const registers = [ax, bx, cx, dx];\n\n    if (registers.some((item) => item === '')) {\n      return alert('Complete all text fields in the register');\n    }\n\n    if (registers.some((item) => !/\\b[01]+\\b/.test(item))) {\n      return alert('Incorrect field format. Use binary code');\n    }\n\n    const data = new FormData(e.target);\n    const setters = { setAx, setBx, setCx, setDx };\n    const getters = { ax, bx, cx, dx};\n\n    switch (data.get('command')) {\n      case 'MOV':\n         return moveParameters(data, setters, getters);\n\n      case 'ADD':\n        return addSubParameters(data, setters, getters);\n\n      case 'SUB':\n        return addSubParameters(data, setters, getters, true);\n\n      default:\n        break;\n    }\n  };\n\n  const chartOfRegisters = [\n    { label: 'AX', value: ax, onChange: setAx },\n    { label: 'BX', value: bx, onChange: setBx },\n    { label: 'CX', value: cx, onChange: setCx },\n    { label: 'DX', value: dx, onChange: setDx },\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4\">\n      <div className=\"flex mb-4\">\n        <div className=\"w-1/2 mx-2\">\n          <Commands chartOfRegisters={chartOfRegisters} />\n        </div>\n        <div className=\"w-1/2 mx-2\">\n          <Registers onSubmit={onSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/tailwind.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}